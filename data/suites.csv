"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Thu Jun 05 14:25:40 UTC 2025","Thu Jun 05 14:25:40 UTC 2025","49","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestResources","restAssuredTests.regres.TestResources","shouldReturnCorrectResourcePageValues","Validate per page, total, and total_pages values",""
"passed","Thu Jun 05 14:25:58 UTC 2025","Thu Jun 05 14:25:58 UTC 2025","320","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldPartiallyUpdateUser","Partially update a user's job title",""
"passed","Thu Jun 05 14:26:01 UTC 2025","Thu Jun 05 14:26:01 UTC 2025","10","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldValidateMailHasCorrectFormat","Validate email format for all users on page",""
"passed","Thu Jun 05 14:25:40 UTC 2025","Thu Jun 05 14:25:41 UTC 2025","386","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestResources","restAssuredTests.regres.TestResources","shouldReturnNonExistingResource2","Handle 404 for non-existing resource",""
"passed","Thu Jun 05 14:25:57 UTC 2025","Thu Jun 05 14:25:58 UTC 2025","370","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldLoginSuccessfully","Log in a user successfully",""
"passed","Thu Jun 05 14:25:59 UTC 2025","Thu Jun 05 14:25:59 UTC 2025","383","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldRegisterUserUnsuccessfully","Fail to register a user without password",""
"passed","Thu Jun 05 14:25:41 UTC 2025","Thu Jun 05 14:25:42 UTC 2025","372","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldDeleteUser","Delete a user successfully",""
"passed","Thu Jun 05 14:26:01 UTC 2025","Thu Jun 05 14:26:01 UTC 2025","5","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldVerifyJSONContainsExpectedKeys","Verify expected top-level JSON keys exist",""
"passed","Thu Jun 05 14:25:59 UTC 2025","Thu Jun 05 14:25:59 UTC 2025","56","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldReturnExistingSingleUser","Get a single existing user by ID",""
"passed","Thu Jun 05 14:25:41 UTC 2025","Thu Jun 05 14:25:41 UTC 2025","14","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestResources","restAssuredTests.regres.TestResources","shouldVerifyNestedJSONNotEmpty","Ensure nested JSON contains a list of IDs",""
"passed","Thu Jun 05 14:25:41 UTC 2025","Thu Jun 05 14:25:41 UTC 2025","500","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldCreateUser","Create a new user successfully",""
"passed","Thu Jun 05 14:25:59 UTC 2025","Thu Jun 05 14:25:59 UTC 2025","10","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldReturnCorrectUsersPage","Check if page number is correct in response",""
"passed","Thu Jun 05 14:26:01 UTC 2025","Thu Jun 05 14:26:01 UTC 2025","1","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldReturnValidStatusForSpecificUserPage","Verify status code for users page 1",""
"passed","Thu Jun 05 14:25:40 UTC 2025","Thu Jun 05 14:25:40 UTC 2025","468","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestResources","restAssuredTests.regres.TestResources","shouldReturnCorrectResourcePage","Verify correct resource page number is returned",""
"passed","Thu Jun 05 14:26:00 UTC 2025","Thu Jun 05 14:26:01 UTC 2025","380","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldReturnNonExistingSingleUser","Attempt to retrieve a non-existing user",""
"passed","Thu Jun 05 14:25:58 UTC 2025","Thu Jun 05 14:25:58 UTC 2025","357","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldLoginUnsuccessfully","Fail login when password is missing",""
"passed","Thu Jun 05 14:25:59 UTC 2025","Thu Jun 05 14:26:00 UTC 2025","1154","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldReturnListOfUsers","Check that list of users has expected size",""
"passed","Thu Jun 05 14:25:42 UTC 2025","Thu Jun 05 14:25:57 UTC 2025","15326","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldGetDelayedResponse","Request a delayed user list response",""
"passed","Thu Jun 05 14:25:41 UTC 2025","Thu Jun 05 14:25:41 UTC 2025","25","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestResources","restAssuredTests.regres.TestResources","shouldVerifyJSONContainsExpectedKeys","Verify JSON contains expected keys",""
"passed","Thu Jun 05 14:26:01 UTC 2025","Thu Jun 05 14:26:01 UTC 2025","325","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldUpdateUser","Fully update a user with new name and job",""
"passed","Thu Jun 05 14:25:41 UTC 2025","Thu Jun 05 14:25:41 UTC 2025","68","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestResources","restAssuredTests.regres.TestResources","shouldReturnSingleResourcesPage","Return single resource by ID",""
"passed","Thu Jun 05 14:25:58 UTC 2025","Thu Jun 05 14:25:59 UTC 2025","320","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestUsersMethods","restAssuredTests.regres.TestUsersMethods","shouldRegisterUserSuccessfully","Register a user with correct credentials",""
"passed","Thu Jun 05 14:25:40 UTC 2025","Thu Jun 05 14:25:40 UTC 2025","358","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestResources","restAssuredTests.regres.TestResources","shouldReturnNonExistingResource","Handle 404 for non-existing resource",""
"passed","Thu Jun 05 14:25:41 UTC 2025","Thu Jun 05 14:25:41 UTC 2025","1","GoRestAPITestSuite","GoRestAPI","restAssuredTests.regres.TestResources","restAssuredTests.regres.TestResources","shouldReturnValidStatusForDefaultResourcePage","Verify status code for default resource page","Checks that the status code is 200 for the default resource page."
